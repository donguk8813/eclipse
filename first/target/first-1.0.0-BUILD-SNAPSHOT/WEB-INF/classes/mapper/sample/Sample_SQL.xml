<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sample">

	<!-- 게시글 -->

	<!-- 게시글 목록 조회 -->
	<select id="selectBoardList" parameterType="hashmap" resultType="hashmap">
		<include refid="common.pagingPre"/>
		<![CDATA[
			SELECT
					ROW_NUMBER() OVER(ORDER BY IDX DESC) RNUM,
					IDX,
					TITLE,
					HIT_CNT,
					CREA_DTM
			FROM
					TB_BOARD
			WHERE
					DEL_GB = 'N'
		]]>
		<include refid="common.pagingPost"/>

	</select>

	<select id="selectPagingList" parameterType="hashmap"
		resultType="hashmap">
		<![CDATA[
			SELECT AAA.* FROM( SELECT COUNT(*) OVER() AS TOTAL_COUNT, AA.* FROM( SELECT ROW_NUMBER() OVER (ORDER BY IDX DESC) RNUM, IDX, TITLE, HIT_CNT, CREA_DTM FROM TB_BOARD ) AA ) AAA WHERE AAA.RNUM BETWEEN 0 AND 20
		]]>
	</select>

	<!-- 게시글 상세 정보 조회 -->
	<select id="selectBoardDetail" parameterType="hashmap"
		resultType="hashmap">
		<![CDATA[
			SELECT IDX, HIT_CNT, CREA_ID, CREA_DTM, TITLE, CONTENTS
			FROM TB_BOARD
			WHERE IDX = #{IDX}
		]]>
	</select>

	<!-- 게시글 추가 useGeneratedKeys 속성은 MyBatis에서 제공하는 기능으로 DB에 입력(insert, update) 
		시 데이터베이스에서 자동적으로 증가되는 키를 받는 JDBC의 getGeneratedKeys() 메서드를 사용하도록 하는것. MySql이나 
		MsSql 같이 자동생성키 컬럼을 지원하는 DB는 useGeneratedKeys 와 keyProperty 두가지 속성만 사용하면 되지만 
		Oracle과 같이 자동생성키 기능이 없는 경우는 추가적인 작업을 해줘야 함. -> selectKey 부분 -->
	<insert id="insertBoard" parameterType="hashmap"
		useGeneratedKeys="true" keyProperty="IDX">
		<selectKey keyProperty="IDX" resultType="String"
			order="BEFORE">
			SELECT SEQ_TB_BOARD_IDX.NEXTVAL FROM DUAL
		</selectKey>
		
		<![CDATA[
			INSERT INTO TB_BOARD(IDX, TITLE, CONTENTS, HIT_CNT, DEL_GB, CREA_DTM, CREA_ID)
			VALUES(#{IDX}, #{TITLE}, #{CONTENTS}, 0, 'N', SYSDATE, 'Admin')
		]]>

	</insert>


	<!-- 게시글 조회수 증가 -->
	<update id="updateHitCnt" parameterType="hashmap">
		<![CDATA[
			UPDATE TB_BOARD SET HIT_CNT = NVL(HIT_CNT, 0) +1
			WHERE IDX = #{IDX}
		]]>
	</update>

	<!-- 게시글 수정 -->
	<update id="updateBoard" parameterType="hashmap">
		<![CDATA[
			UPDATE TB_BOARD SET TITLE = #{TITLE}, 
								CONTENTS = #{CONTENTS}
							WHERE IDX = #{IDX}
		]]>
	</update>


	<!-- 게시글 삭제 -->
	<update id="deleteBoard" parameterType="hashmap">
		<![CDATA[
			UPDATE TB_BOARD SET DEL_GB = 'Y'
							WHERE IDX = #{IDX}
		]]>

	</update>



	<!-- 첨부 파일 -->

	<!-- 첨부 파일 추가 -->
	<insert id="insertFile" parameterType="hashmap">
		<![CDATA[
			INSERT INTO TB_FILE(IDX, BOARD_IDX, ORIGINAL_FILE_NAME, STORED_FILE_NAME, FILE_SIZE, CREA_ID)
			VALUES(SEQ_TB_FILE_IDX.NEXTVAL, #{BOARD_IDX}, #{ORIGINAL_FILE_NAME}, #{STORED_FILE_NAME}, #{FILE_SIZE}, 'ADMIN')
		]]>

	</insert>

	<!-- 첨부 파일 목록 조회 -->
	<select id="selectFileList" parameterType="hashmap"
		resultType="hashmap">
		<![CDATA[
			SELECT IDX, ORIGINAL_FILE_NAME, ROUND(FILE_SIZE/1024, 1) AS FILE_SIZE
			FROM TB_FILE
			WHERE BOARD_IDX = #{IDX}
			AND DEL_GB ='N'
		]]>
	</select>

	<!-- 첨부 파일 수정 -->
	<update id="updateFile" parameterType="hashmap">
		<![CDATA[
			UPDATE TB_FILE SET
					DEL_GB = 'N'
			WHERE 
					IDX = #{FILE_IDX}
		]]>

	</update>


	<!-- 첨부 파일 삭제 -->
	<update id="deleteFileList" parameterType="hashmap">
		<![CDATA[
			UPDATE TB_FILE SET
					DEL_GB = 'Y'
			WHERE
					BOARD_IDX = #{IDX}
		]]>
	</update>

</mapper>